name: Apply Database Migrations

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment environment (Development/Staging/Production)"
        required: true
        default: Development
      action:
        description: "Migration action (update/add/bundle)"
        required: true
        default: update
      migrationName:
        description: "Migration name (only for add/update)"
        required: false
        default: InitialCreate
  push:
    branches:
      - main
    paths:
      - "src/Infrastructure/**"
      - "src/Domain/**"
      - "src/Application/**"
      - "scripts/migrate.ps1"

jobs:
  migrate:
    runs-on: windows-latest
    environment: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || 'Development' }}

    env:
      DOTNET_NOLOGO: true
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      MIGRATION_ENV: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || 'Development' }}
      MIGRATION_ACTION: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.action || 'update' }}
      MIGRATION_NAME: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.migrationName || 'InitialCreate' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore .NET tools
        run: dotnet tool restore
        working-directory: .
        continue-on-error: true

      - name: Install dotnet-ef (if missing)
        run: |
          if (-not (Get-Command "dotnet-ef" -ErrorAction SilentlyContinue)) {
            dotnet tool install --global dotnet-ef
          }
        shell: pwsh

      - name: Run migration script
        shell: pwsh
        env:
          DB_CONNECTION: ${{ secrets.DB_CONNECTION }}
          REDIS_CONNECTION: ${{ secrets.REDIS_CONNECTION }}
        run: |
          $dbConn = if (-not [string]::IsNullOrWhiteSpace($env:DB_CONNECTION)) { $env:DB_CONNECTION } else { "" }
          $redisConn = if (-not [string]::IsNullOrWhiteSpace($env:REDIS_CONNECTION)) { $env:REDIS_CONNECTION } else { "" }

          ./scripts/migrate.ps1 -Action $env:MIGRATION_ACTION -Migration $env:MIGRATION_NAME -Environment $env:MIGRATION_ENV -DatabaseConnection $dbConn -RedisConnection $redisConn
